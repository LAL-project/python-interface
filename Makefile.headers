###########################################################################
#
#    SWIG-generated python wrapper for the Linear Arrangement Library
#    Copyright (C) 2021 - 2024 Lluís Alemany Puig
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU Affero General Public License as published
#    by the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU Affero General Public License for more details.
#
#    You should have received a copy of the GNU Affero General Public License
#    along with this program. If not, see <https://www.gnu.org/licenses/>.
#
#    Contact:
#
#        Lluís Alemany Puig (lluis.alemany.puig@upc.edu)
#            LQMC (Quantitative, Mathematical, and Computational Linguisitcs)
#            CQL (Complexity and Quantitative Linguistics Lab)
#            Jordi Girona St 1-3, Campus Nord UPC, 08034 Barcelona.   CATALONIA, SPAIN
#            Webpage: https://cqllab.upc.edu/people/lalemany/
#
###########################################################################

ifeq ($(USER_ENVIRONMENT),development)

# ENUMERATIONS

TREEBANK_ERR_DPHDRS	= $(LAL_INC_DIR)/lal/io/treebank_error_type.hpp

TREEBANK_FEATURE_DPHDRS	= $(LAL_INC_DIR)/lal/io/treebank_feature.hpp

SYN_DEP_TREE_DPHDRS	= $(LAL_INC_DIR)/lal/linarr/syntactic_dependency_tree/type.hpp

TREE_TYPE_DPHDRS	= $(LAL_INC_DIR)/lal/graphs/tree_type.hpp

ALG_C_DPHDRS		= $(LAL_INC_DIR)/lal/linarr/C/algorithms_C.hpp

ALG_CHUNKING_DPHDRS	= $(LAL_INC_DIR)/lal/linarr/chunking/algorithms.hpp

ALG_DMIN_DPHDRS		= $(LAL_INC_DIR)/lal/linarr/D/algorithms_Dmin.hpp
ALG_DMIN_PL_DPHDRS	= $(LAL_INC_DIR)/lal/linarr/D/algorithms_Dmin_planar.hpp
ALG_DMIN_PR_DPHDRS	= $(LAL_INC_DIR)/lal/linarr/D/algorithms_Dmin_projective.hpp

# TYPES

BASIC_TYPES_DPHDRS	= $(LAL_INC_DIR)/lal/basic_types.hpp \
					  $(LAL_INC_DIR)/lal/linear_arrangement.hpp

# NAMESPACES

GRAPHS_DPHDRS		= $(LAL_INC_DIR)/lal/graphs/conversions.hpp \
					  $(LAL_INC_DIR)/lal/graphs/directed_graph.hpp \
					  $(LAL_INC_DIR)/lal/graphs/free_tree.hpp \
					  $(LAL_INC_DIR)/lal/graphs/graph.hpp \
					  $(LAL_INC_DIR)/lal/graphs/rooted_tree.hpp \
					  $(LAL_INC_DIR)/lal/graphs/tree.hpp \
					  $(LAL_INC_DIR)/lal/graphs/tree_type.hpp \
					  $(TREE_TYPE_DPHDRS) \
					  $(LAL_INC_DIR)/lal/graphs/undirected_graph.hpp \
					  $(LAL_INC_DIR)/lal/graphs.hpp

NUMERIC_DPHDRS		= $(LAL_INC_DIR)/lal/numeric/integer.hpp \
					  $(LAL_INC_DIR)/lal/numeric/rational.hpp \
					  $(LAL_INC_DIR)/lal/numeric/output.hpp \
					  $(LAL_INC_DIR)/lal/numeric.hpp

GENERATE_DPHDRS		= $(GRAPHS_DPHDRS) \
					  $(NUMERIC_DPHDRS) \
					  $(LAL_INC_DIR)/lal/generate/all_lab_free_trees.hpp \
					  $(LAL_INC_DIR)/lal/generate/all_lab_rooted_trees.hpp \
					  $(LAL_INC_DIR)/lal/generate/all_ulab_free_trees.hpp \
					  $(LAL_INC_DIR)/lal/generate/all_ulab_rooted_trees.hpp \
					  $(LAL_INC_DIR)/lal/generate/rand_lab_free_trees.hpp \
					  $(LAL_INC_DIR)/lal/generate/rand_lab_rooted_trees.hpp \
					  $(LAL_INC_DIR)/lal/generate/rand_ulab_free_trees.hpp \
					  $(LAL_INC_DIR)/lal/generate/rand_ulab_rooted_trees.hpp \
					  $(LAL_INC_DIR)/lal/generate/tree_generator.hpp \
					  $(LAL_INC_DIR)/lal/generate/all_arrangements.hpp \
					  $(LAL_INC_DIR)/lal/generate/all_bipartite_arrangements.hpp \
					  $(LAL_INC_DIR)/lal/generate/all_planar_arrangements.hpp \
					  $(LAL_INC_DIR)/lal/generate/all_projective_arrangements.hpp \
					  $(LAL_INC_DIR)/lal/generate/rand_arrangements.hpp \
					  $(LAL_INC_DIR)/lal/generate/rand_bipartite_arrangements.hpp \
					  $(LAL_INC_DIR)/lal/generate/rand_planar_arrangements.hpp \
					  $(LAL_INC_DIR)/lal/generate/rand_projective_arrangements.hpp \
					  $(LAL_INC_DIR)/lal/generate.hpp

IO_DPHDRS			= $(GRAPHS_DPHDRS) \
					  $(LAL_INC_DIR)/lal/io/basic_output.hpp \
					  $(LAL_INC_DIR)/lal/io/check_correctness.hpp \
					  $(LAL_INC_DIR)/lal/io/edge_list.hpp \
					  $(LAL_INC_DIR)/lal/io/process_treebank_base.hpp \
					  $(LAL_INC_DIR)/lal/io/report_correctness.hpp \
					  $(LAL_INC_DIR)/lal/io/treebank_collection_processor.hpp \
					  $(LAL_INC_DIR)/lal/io/treebank_collection_reader.hpp \
					  $(LAL_INC_DIR)/lal/io/treebank_error_type.hpp \
					  $(LAL_INC_DIR)/lal/io/treebank_processor.hpp \
					  $(LAL_INC_DIR)/lal/io/treebank_reader.hpp \
					  $(LAL_INC_DIR)/lal/io.hpp

ITERATORS_DPHDRS	= $(GRAPHS_DPHDRS) \
					  $(LAL_INC_DIR)/lal/iterators/E_iterator.hpp \
					  $(LAL_INC_DIR)/lal/iterators/Q_iterator.hpp \
					  $(LAL_INC_DIR)/lal/iterators.hpp

LINARR_DPHDRS		= $(GRAPHS_DPHDRS) \
					  $(NUMERIC_DPHDRS) \
					  $(LAL_INC_DIR)/lal/linarr/aggregations/1level.hpp \
					  $(LAL_INC_DIR)/lal/linarr/aggregations/2level.hpp \
					  $(ALG_C_DPHDRS) \
					  $(LAL_INC_DIR)/lal/linarr/C/C.hpp \
					  $(ALG_CHUNKING_DPHDRS) \
					  $(LAL_INC_DIR)/lal/linarr/chunking/chunk.hpp \
					  $(LAL_INC_DIR)/lal/linarr/chunking/chunking.hpp \
					  $(LAL_INC_DIR)/lal/linarr/chunking/output.hpp \
					  $(ALG_DMIN_DPHDRS) \
					  $(ALG_DMIN_PL_DPHDRS) \
					  $(ALG_DMIN_PR_DPHDRS) \
					  $(LAL_INC_DIR)/lal/linarr/D/D.hpp \
					  $(LAL_INC_DIR)/lal/linarr/D/DMax.hpp \
					  $(LAL_INC_DIR)/lal/linarr/D/Dmin.hpp \
					  $(SYN_DEP_TREE_DPHDRS) \
					  $(LAL_INC_DIR)/lal/linarr/syntactic_dependency_tree/classify.hpp \
					  $(LAL_INC_DIR)/lal/linarr/dependency_flux_compute.hpp \
					  $(LAL_INC_DIR)/lal/linarr/dependency_flux.hpp \
					  $(LAL_INC_DIR)/lal/linarr/formal_constraints.hpp \
					  $(LAL_INC_DIR)/lal/linarr/head_initial.hpp \
					  $(LAL_INC_DIR)/lal/linarr.hpp

PROPERTIES_DPHDRS	= $(GRAPHS_DPHDRS) \
					  $(NUMERIC_DPHDRS) \
					  $(LAL_INC_DIR)/lal/properties/bipartite_graph_colorability.hpp \
					  $(LAL_INC_DIR)/lal/properties/bipartite_graph_coloring.hpp \
					  $(LAL_INC_DIR)/lal/properties/branchless_paths_compute.hpp \
					  $(LAL_INC_DIR)/lal/properties/branchless_path.hpp \
					  $(LAL_INC_DIR)/lal/properties/C_rla.hpp \
					  $(LAL_INC_DIR)/lal/properties/connected_components_compute.hpp \
					  $(LAL_INC_DIR)/lal/properties/connected_components.hpp \
					  $(LAL_INC_DIR)/lal/properties/D_rla.hpp \
					  $(LAL_INC_DIR)/lal/properties/degrees.hpp \
					  $(LAL_INC_DIR)/lal/properties/hierarchical_distance.hpp \
					  $(LAL_INC_DIR)/lal/properties/maximum_spanning_trees.hpp \
					  $(LAL_INC_DIR)/lal/properties/Q.hpp \
					  $(LAL_INC_DIR)/lal/properties/tree_centre.hpp \
					  $(LAL_INC_DIR)/lal/properties/tree_centroid.hpp \
					  $(LAL_INC_DIR)/lal/properties/tree_diameter.hpp \
					  $(LAL_INC_DIR)/lal/properties/vertex_orbits.hpp \
					  $(LAL_INC_DIR)/lal/properties.hpp

UTILS_DPHDRS		= $(GRAPHS_DPHDRS) \
					  $(LAL_INC_DIR)/lal/utilities/tree_isomorphism.hpp \
					  $(LAL_INC_DIR)/lal/utilities.hpp

LAL_DPHDRS			=

VERSION_DPHDRS		= $(LAL_INC_DIR)/lal/lal_version.hpp

else ifeq ($(USER_ENVIRONMENT),distribution)

TREEBANK_ERR_DPHDRS		=
TREEBANK_FEATURE_DPHDRS	=
SYN_DEP_TREE_DPHDRS		=
ALG_C_DPHDRS			=
ALG_DMIN_DPHDRS			=
TREE_TYPE_DPHDRS		=
BASIC_TYPES_DPHDRS		=
DEFINITIONS_DPHDRS		=
GENERATE_DPHDRS			=
GRAPHS_DPHDRS			=
IO_DPHDRS				=
ITERATORS_DPHDRS		=
LINARR_DPHDRS 			=
NUMERIC_DPHDRS			=
PROPERTIES_DPHDRS		=
UTILS_DPHDRS			=
VERSION_DPHDRS			=

endif
