###########################################################################
#
#    SWIG-generated python wrapper for the Linear Arrangement Library
#    Copyright (C) 2021 - 2024 Lluís Alemany Puig
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU Affero General Public License as published
#    by the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU Affero General Public License for more details.
#
#    You should have received a copy of the GNU Affero General Public License
#    along with this program. If not, see <https://www.gnu.org/licenses/>.
#
#    Contact:
#
#        Lluís Alemany Puig (lluis.alemany.puig@upc.edu)
#            LQMC (Quantitative, Mathematical, and Computational Linguisitcs)
#            CQL (Complexity and Quantitative Linguistics Lab)
#            Jordi Girona St 1-3, Campus Nord UPC, 08034 Barcelona.   CATALONIA, SPAIN
#            Webpage: https://cqllab.upc.edu/people/lalemany/
#
###########################################################################

DOCUMENTATION_FILE = modules/documentation.i

# ######################################################################
# MODULE NAME variables

# ------------
# ENUMERATIONS

HEAD_VECTOR_ERROR_TYPE_INTERFACE_NAME	= head_vector_error_type
TREEBANK_FILE_ERROR_TYPE_INTERFACE_NAME	= treebank_file_error_type
TREEBANK_FEATURE_TYPE_INTERFACE_NAME	= treebank_feature_type
SYN_DEP_TREE_TYPE_INTERFACE_NAME		= syntactic_dependency_tree_type
TREE_TYPE_INTERFACE_NAME				= tree_type
ALG_C_INTERFACE_NAME					= algorithms_C
ALG_CHUNKING_INTERFACE_NAME				= algorithms_chunking
ALG_DMIN_INTERFACE_NAME					= algorithms_Dmin
ALG_DMIN_PL_INTERFACE_NAME				= algorithms_Dmin_planar
ALG_DMIN_PR_INTERFACE_NAME				= algorithms_Dmin_projective

# -----
# TYPES

TYPES_INTERFACE_NAME		= types

# ----------
# NAMESPACES

GENERATE_INTERFACE_NAME		= generate
GRAPHS_INTERFACE_NAME		= graphs
IO_INTERFACE_NAME			= io
ITERATORS_INTERFACE_NAME	= iterators
LINARR_INTERFACE_NAME		= linarr
NUMERIC_INTERFACE_NAME		= numeric
PROPERTIES_INTERFACE_NAME	= properties
UTILS_INTERFACE_NAME		= utilities
VERSION_INTERFACE_NAME		= version

# ######################################################################
# MODULE FILE variables

# *******************
# ** documentation **
# *******************


# "name" is a placeholder (or variable) for the name of the module:
#		
#		name: dataset_error,
#		name: generate,
#		...
#
# name_MAIN_INT
#
#	module's interface file (SWIG file '*.i', e.g. name.i)
#
# name_MOD_DEPS
#
#	dependencies of the module
#
# name_PREFIX
#
#	prefix of the files to be generated with relative to the build
#		FORMULA:
#			$(INTERFACE_DIRECTORY)/$(name_INTERFACE_NAME)
#
#		INSTANTIATIONS:
#			laloptimized/dataset_error
#			lal/dataset_error
#
# name_RAW_PY_FILE
#
#	name of the module python file within the build
#		FORMULA:
#			$(name_PREFIX).py
#
#		INSTANTIATIONS:
#			laloptimized/dataset_error.py
#			lal/dataset_error.py
#
# name_INSTALL_PY_FILE
#
#	module python file in the build directory
#		FORMULA:
#			$(ARCH_DIR)/$(name_RAW_PY_FILE)
#
#		INSTANTIATIONS:
#			linux/64/laloptimized/dataset_error.py
#			linux/64/lal/dataset_error.py
#			win/64/laloptimized/dataset_error.py
#			win/64/lal/dataset_error.py
#
# name_WRAP	
#
#	prefix of the wrapper files within the build directory
#		FORMULA:
#			$(ARCH_DIR)/$(name_PREFIX)_wrap
#
#		INSTANTIATIONS:
#			linux/64/laloptimized/dataset_error_wrap
#			linux/64/lal/dataset_error_wrap
#			win/64/laloptimized/dataset_error_wrap
#			win/64/lal/dataset_error_wrap
#
# name_RAW_SO_FILE
#
#	Name of the .so within the build directory
#		FORMULA:
#			$(INTERFACE_DIRECTORY)/_$(name_INTERFACE_NAME).$(SO_EXT)
#
#		INSTANTIATIONS:
#			laloptimized/_dataset_error.so
#			lal/_dataset_error.so
#			laloptimized/_dataset_error.pyd
#			lal/_dataset_error.pyd
#
# name_INSTALL_SO_FILE
#
#	Name of the .so within the build directory
#		FORMULA:
#			$(ARCH_DIR)/$(name_RAW_SO_FILE)
#
#		INSTANTIATIONS:
#			linux/64/laloptimized/_dataset_error.so
#			linux/64/lal/_dataset_error.so
#			win/64/laloptimized/_dataset_error.pyd
#			win/64/lal/_dataset_error.pyd
#
# name_MOD_DOCS
#
#	python file with this module's documentation

# ------------
# ENUMERATIONS

# -- head_vector_error-type module
HEAD_VECTOR_ERROR_TYPE_MAIN_INT			= modules/enums/$(HEAD_VECTOR_ERROR_TYPE_INTERFACE_NAME).i
HEAD_VECTOR_ERROR_TYPE_MOD_DEPS			= $(HEAD_VECTOR_ERROR_TYPE_MAIN_INT) $(HEAD_VECTOR_ERROR_TYPE_DPHDRS)
HEAD_VECTOR_ERROR_TYPE_PREFIX			= $(INTERFACE_DIRECTORY)/$(HEAD_VECTOR_ERROR_TYPE_INTERFACE_NAME)
HEAD_VECTOR_ERROR_TYPE_RAW_PY_FILE		= $(HEAD_VECTOR_ERROR_TYPE_PREFIX).py
HEAD_VECTOR_ERROR_TYPE_INSTALL_PY_FILE	= $(ARCH_DIR)/$(HEAD_VECTOR_ERROR_TYPE_RAW_PY_FILE)
HEAD_VECTOR_ERROR_TYPE_WRAP				= $(ARCH_DIR)/$(HEAD_VECTOR_ERROR_TYPE_PREFIX)_wrap
HEAD_VECTOR_ERROR_TYPE_RAW_SO_FILE		= $(INTERFACE_DIRECTORY)/_$(HEAD_VECTOR_ERROR_TYPE_INTERFACE_NAME).$(SO_EXT)
HEAD_VECTOR_ERROR_TYPE_INSTALL_SO_FILE	= $(ARCH_DIR)/$(HEAD_VECTOR_ERROR_TYPE_RAW_SO_FILE)
HEAD_VECTOR_ERROR_TYPE_MOD_DOCS			= modules_pydocs/$(HEAD_VECTOR_ERROR_TYPE_INTERFACE_NAME).py

# -- treebank_file_error_type module
TREEBANK_FILE_ERROR_TYPE_MAIN_INT			= modules/enums/$(TREEBANK_FILE_ERROR_TYPE_INTERFACE_NAME).i
TREEBANK_FILE_ERROR_TYPE_MOD_DEPS			= $(TREEBANK_FILE_ERROR_TYPE_MAIN_INT) $(TREEBANK_FILE_ERROR_TYPEOR_TYPE_DPHDRS)
TREEBANK_FILE_ERROR_TYPE_PREFIX				= $(INTERFACE_DIRECTORY)/$(TREEBANK_FILE_ERROR_TYPE_INTERFACE_NAME)
TREEBANK_FILE_ERROR_TYPE_RAW_PY_FILE		= $(TREEBANK_FILE_ERROR_TYPE_PREFIX).py
TREEBANK_FILE_ERROR_TYPE_INSTALL_PY_FILE	= $(ARCH_DIR)/$(TREEBANK_FILE_ERROR_TYPE_RAW_PY_FILE)
TREEBANK_FILE_ERROR_TYPE_WRAP				= $(ARCH_DIR)/$(TREEBANK_FILE_ERROR_TYPE_PREFIX)_wrap
TREEBANK_FILE_ERROR_TYPE_RAW_SO_FILE		= $(INTERFACE_DIRECTORY)/_$(TREEBANK_FILE_ERROR_TYPE_INTERFACE_NAME).$(SO_EXT)
TREEBANK_FILE_ERROR_TYPE_INSTALL_SO_FILE	= $(ARCH_DIR)/$(TREEBANK_FILE_ERROR_TYPE_RAW_SO_FILE)
TREEBANK_FILE_ERROR_TYPE_MOD_DOCS			= modules_pydocs/$(TREEBANK_FILE_ERROR_TYPE_INTERFACE_NAME).py

# -- treebank_error module
TREEBANK_FEATURE_TYPE_MAIN_INT			= modules/enums/$(TREEBANK_FEATURE_TYPE_INTERFACE_NAME).i
TREEBANK_FEATURE_TYPE_MOD_DEPS			= $(TREEBANK_FEATURE_TYPE_MAIN_INT) $(TREEBANK_FEATURE_TYPE_DPHDRS)
TREEBANK_FEATURE_TYPE_PREFIX			= $(INTERFACE_DIRECTORY)/$(TREEBANK_FEATURE_TYPE_INTERFACE_NAME)
TREEBANK_FEATURE_TYPE_RAW_PY_FILE		= $(TREEBANK_FEATURE_TYPE_PREFIX).py
TREEBANK_FEATURE_TYPE_INSTALL_PY_FILE	= $(ARCH_DIR)/$(TREEBANK_FEATURE_TYPE_RAW_PY_FILE)
TREEBANK_FEATURE_TYPE_WRAP				= $(ARCH_DIR)/$(TREEBANK_FEATURE_TYPE_PREFIX)_wrap
TREEBANK_FEATURE_TYPE_RAW_SO_FILE		= $(INTERFACE_DIRECTORY)/_$(TREEBANK_FEATURE_TYPE_INTERFACE_NAME).$(SO_EXT)
TREEBANK_FEATURE_TYPE_INSTALL_SO_FILE	= $(ARCH_DIR)/$(TREEBANK_FEATURE_TYPE_RAW_SO_FILE)
TREEBANK_FEATURE_TYPE_MOD_DOCS			= modules_pydocs/$(TREEBANK_FEATURE_TYPE_INTERFACE_NAME).py

# -- syntactic dependency structure type module
SYN_DEP_TREE_TYPE_MAIN_INT			= modules/enums/$(SYN_DEP_TREE_TYPE_INTERFACE_NAME).i
SYN_DEP_TREE_TYPE_MOD_DEPS			= $(SYN_DEP_TREE_TYPE_MAIN_INT) $(SYN_DEP_TREE_TYPE_DPHDRS) \
									modules/enums/rename_enum_contents.i
SYN_DEP_TREE_TYPE_PREFIX				= $(INTERFACE_DIRECTORY)/$(SYN_DEP_TREE_TYPE_INTERFACE_NAME)
SYN_DEP_TREE_TYPE_RAW_PY_FILE		= $(SYN_DEP_TREE_TYPE_PREFIX).py
SYN_DEP_TREE_TYPE_INSTALL_PY_FILE	= $(ARCH_DIR)/$(SYN_DEP_TREE_TYPE_RAW_PY_FILE)
SYN_DEP_TREE_TYPE_WRAP				= $(ARCH_DIR)/$(SYN_DEP_TREE_TYPE_PREFIX)_wrap
SYN_DEP_TREE_TYPE_RAW_SO_FILE		= $(INTERFACE_DIRECTORY)/_$(SYN_DEP_TREE_TYPE_INTERFACE_NAME).$(SO_EXT)
SYN_DEP_TREE_TYPE_INSTALL_SO_FILE	= $(ARCH_DIR)/$(SYN_DEP_TREE_TYPE_RAW_SO_FILE)
SYN_DEP_TREE_TYPE_MOD_DOCS			= modules_pydocs/$(SYN_DEP_TREE_TYPE_INTERFACE_NAME).py

# -- tree_type module
TREE_TYPE_MAIN_INT				= modules/enums/$(TREE_TYPE_INTERFACE_NAME).i
TREE_TYPE_MOD_DEPS				= $(TREE_TYPE_MAIN_INT) $(TREE_TYPE_DPHDRS) \
									modules/enums/rename_enum_contents.i
TREE_TYPE_PREFIX				= $(INTERFACE_DIRECTORY)/$(TREE_TYPE_INTERFACE_NAME)
TREE_TYPE_RAW_PY_FILE			= $(TREE_TYPE_PREFIX).py
TREE_TYPE_INSTALL_PY_FILE		= $(ARCH_DIR)/$(TREE_TYPE_RAW_PY_FILE)
TREE_TYPE_WRAP					= $(ARCH_DIR)/$(TREE_TYPE_PREFIX)_wrap
TREE_TYPE_RAW_SO_FILE			= $(INTERFACE_DIRECTORY)/_$(TREE_TYPE_INTERFACE_NAME).$(SO_EXT)
TREE_TYPE_INSTALL_SO_FILE		= $(ARCH_DIR)/$(TREE_TYPE_RAW_SO_FILE)
TREE_TYPE_MOD_DOCS				= modules_pydocs/$(TREE_TYPE_INTERFACE_NAME).py

# -- algorithm_C module
ALG_C_MAIN_INT					= modules/enums/$(ALG_C_INTERFACE_NAME).i
ALG_C_MOD_DEPS					= $(ALG_C_MAIN_INT) $(ALG_C_DPHDRS) \
									modules/enums/rename_enum_contents.i
ALG_C_PREFIX					= $(INTERFACE_DIRECTORY)/$(ALG_C_INTERFACE_NAME)
ALG_C_RAW_PY_FILE				= $(ALG_C_PREFIX).py
ALG_C_INSTALL_PY_FILE			= $(ARCH_DIR)/$(ALG_C_RAW_PY_FILE)
ALG_C_WRAP						= $(ARCH_DIR)/$(ALG_C_PREFIX)_wrap
ALG_C_RAW_SO_FILE				= $(INTERFACE_DIRECTORY)/_$(ALG_C_INTERFACE_NAME).$(SO_EXT)
ALG_C_INSTALL_SO_FILE			= $(ARCH_DIR)/$(ALG_C_RAW_SO_FILE)
ALG_C_MOD_DOCS					= modules_pydocs/algorithms_C.py

# -- algorithm_chunking module
ALG_CHUNKING_MAIN_INT			= modules/enums/$(ALG_CHUNKING_INTERFACE_NAME).i
ALG_CHUNKING_MOD_DEPS			= $(ALG_CHUNKING_MAIN_INT) $(ALG_CHUNKING_DPHDRS) \
									modules/enums/rename_enum_contents.i
ALG_CHUNKING_PREFIX				= $(INTERFACE_DIRECTORY)/$(ALG_CHUNKING_INTERFACE_NAME)
ALG_CHUNKING_RAW_PY_FILE		= $(ALG_CHUNKING_PREFIX).py
ALG_CHUNKING_INSTALL_PY_FILE	= $(ARCH_DIR)/$(ALG_CHUNKING_RAW_PY_FILE)
ALG_CHUNKING_WRAP				= $(ARCH_DIR)/$(ALG_CHUNKING_PREFIX)_wrap
ALG_CHUNKING_RAW_SO_FILE		= $(INTERFACE_DIRECTORY)/_$(ALG_CHUNKING_INTERFACE_NAME).$(SO_EXT)
ALG_CHUNKING_INSTALL_SO_FILE	= $(ARCH_DIR)/$(ALG_CHUNKING_RAW_SO_FILE)
ALG_CHUNKING_MOD_DOCS			= modules_pydocs/algorithms_chunking.py

# -- algorithm_Dmin module
ALG_DMIN_MAIN_INT				= modules/enums/$(ALG_DMIN_INTERFACE_NAME).i
ALG_DMIN_MOD_DEPS				= $(ALG_DMIN_MAIN_INT) $(ALG_DMIN_DPHDRS) \
									modules/enums/rename_enum_contents.i
ALG_DMIN_PREFIX					= $(INTERFACE_DIRECTORY)/$(ALG_DMIN_INTERFACE_NAME)
ALG_DMIN_RAW_PY_FILE			= $(ALG_DMIN_PREFIX).py
ALG_DMIN_INSTALL_PY_FILE		= $(ARCH_DIR)/$(ALG_DMIN_RAW_PY_FILE)
ALG_DMIN_WRAP					= $(ARCH_DIR)/$(ALG_DMIN_PREFIX)_wrap
ALG_DMIN_RAW_SO_FILE			= $(INTERFACE_DIRECTORY)/_$(ALG_DMIN_INTERFACE_NAME).$(SO_EXT)
ALG_DMIN_INSTALL_SO_FILE		= $(ARCH_DIR)/$(ALG_DMIN_RAW_SO_FILE)
ALG_DMIN_MOD_DOCS				= modules_pydocs/$(ALG_DMIN_INTERFACE_NAME).py

# -- algorithm_Dmin_planar module
ALG_DMIN_PL_MAIN_INT			= modules/enums/$(ALG_DMIN_PL_INTERFACE_NAME).i
ALG_DMIN_PL_MOD_DEPS			= $(ALG_DMIN_PL_MAIN_INT) $(ALG_DMIN_PL_DPHDRS) \
									modules/enums/rename_enum_contents.i
ALG_DMIN_PL_PREFIX				= $(INTERFACE_DIRECTORY)/$(ALG_DMIN_PL_INTERFACE_NAME)
ALG_DMIN_PL_RAW_PY_FILE			= $(ALG_DMIN_PL_PREFIX).py
ALG_DMIN_PL_INSTALL_PY_FILE		= $(ARCH_DIR)/$(ALG_DMIN_PL_RAW_PY_FILE)
ALG_DMIN_PL_WRAP				= $(ARCH_DIR)/$(ALG_DMIN_PL_PREFIX)_wrap
ALG_DMIN_PL_RAW_SO_FILE			= $(INTERFACE_DIRECTORY)/_$(ALG_DMIN_PL_INTERFACE_NAME).$(SO_EXT)
ALG_DMIN_PL_INSTALL_SO_FILE		= $(ARCH_DIR)/$(ALG_DMIN_PL_RAW_SO_FILE)
ALG_DMIN_PL_MOD_DOCS			= modules_pydocs/$(ALG_DMIN_PL_INTERFACE_NAME).py

# -- algorithm_Dmin_projective module
ALG_DMIN_PR_MAIN_INT			= modules/enums/$(ALG_DMIN_PR_INTERFACE_NAME).i
ALG_DMIN_PR_MOD_DEPS			= $(ALG_DMIN_PR_MAIN_INT) $(ALG_DMIN_PR_DPHDRS) \
									modules/enums/rename_enum_contents.i
ALG_DMIN_PR_PREFIX				= $(INTERFACE_DIRECTORY)/$(ALG_DMIN_PR_INTERFACE_NAME)
ALG_DMIN_PR_RAW_PY_FILE			= $(ALG_DMIN_PR_PREFIX).py
ALG_DMIN_PR_INSTALL_PY_FILE		= $(ARCH_DIR)/$(ALG_DMIN_PR_RAW_PY_FILE)
ALG_DMIN_PR_WRAP				= $(ARCH_DIR)/$(ALG_DMIN_PR_PREFIX)_wrap
ALG_DMIN_PR_RAW_SO_FILE			= $(INTERFACE_DIRECTORY)/_$(ALG_DMIN_PR_INTERFACE_NAME).$(SO_EXT)
ALG_DMIN_PR_INSTALL_SO_FILE		= $(ARCH_DIR)/$(ALG_DMIN_PR_RAW_SO_FILE)
ALG_DMIN_PR_MOD_DOCS			= modules_pydocs/$(ALG_DMIN_PR_INTERFACE_NAME).py

# -----------
# MODULES

# -- types module
TYPES_MAIN_INT					= modules/$(TYPES_INTERFACE_NAME).i
TYPES_MOD_DEPS					= $(TYPES_MAIN_INT) $(BASIC_TYPES_DPHDRS)
TYPES_PREFIX					= $(INTERFACE_DIRECTORY)/$(TYPES_INTERFACE_NAME)
TYPES_RAW_PY_FILE				= $(TYPES_PREFIX).py
TYPES_INSTALL_PY_FILE			= $(ARCH_DIR)/$(TYPES_RAW_PY_FILE)
TYPES_WRAP						= $(ARCH_DIR)/$(TYPES_PREFIX)_wrap
TYPES_RAW_SO_FILE				= $(INTERFACE_DIRECTORY)/_$(TYPES_INTERFACE_NAME).$(SO_EXT)
TYPES_INSTALL_SO_FILE			= $(ARCH_DIR)/$(TYPES_RAW_SO_FILE)
TYPES_MOD_DOCS					=

# -- numeric module
NUMERIC_MAIN_INT				= modules/$(NUMERIC_INTERFACE_NAME).i
NUMERIC_MOD_DEPS				= $(NUMERIC_MAIN_INT) $(NUMERIC_DPHDRS)
NUMERIC_PREFIX					= $(INTERFACE_DIRECTORY)/$(NUMERIC_INTERFACE_NAME)
NUMERIC_RAW_PY_FILE				= $(NUMERIC_PREFIX).py
NUMERIC_INSTALL_PY_FILE			= $(ARCH_DIR)/$(NUMERIC_RAW_PY_FILE)
NUMERIC_WRAP					= $(ARCH_DIR)/$(NUMERIC_PREFIX)_wrap
NUMERIC_RAW_SO_FILE				= $(INTERFACE_DIRECTORY)/_$(NUMERIC_INTERFACE_NAME).$(SO_EXT)
NUMERIC_INSTALL_SO_FILE			= $(ARCH_DIR)/$(NUMERIC_RAW_SO_FILE)
NUMERIC_MOD_DOCS				= modules_pydocs/$(NUMERIC_INTERFACE_NAME).py

# -- graphs module
GRAPHS_MAIN_INT					= modules/$(GRAPHS_INTERFACE_NAME).i
GRAPHS_MOD_DEPS					= $(GRAPHS_MAIN_INT) $(TYPES_MAIN_INT) $(GRAPHS_DPHDRS)
GRAPHS_PREFIX					= $(INTERFACE_DIRECTORY)/$(GRAPHS_INTERFACE_NAME)
GRAPHS_RAW_PY_FILE				= $(GRAPHS_PREFIX).py
GRAPHS_INSTALL_PY_FILE			= $(ARCH_DIR)/$(GRAPHS_RAW_PY_FILE)
GRAPHS_WRAP						= $(ARCH_DIR)/$(GRAPHS_PREFIX)_wrap
GRAPHS_RAW_SO_FILE				= $(INTERFACE_DIRECTORY)/_$(GRAPHS_INTERFACE_NAME).$(SO_EXT)
GRAPHS_INSTALL_SO_FILE			= $(ARCH_DIR)/$(GRAPHS_RAW_SO_FILE)
GRAPHS_MOD_DOCS					= modules_pydocs/$(GRAPHS_INTERFACE_NAME).py

# -- properties module
PROPERTIES_MAIN_INT				= modules/$(PROPERTIES_INTERFACE_NAME).i
PROPERTIES_MOD_DEPS				= $(PROPERTIES_MAIN_INT) $(GRAPHS_MAIN_INT)			\
									$(NUMERIC_MAIN_INT) $(TYPES_MAIN_INT)			\
									$(PROPERTIES_DPHDRS)
PROPERTIES_PREFIX				= $(INTERFACE_DIRECTORY)/$(PROPERTIES_INTERFACE_NAME)
PROPERTIES_RAW_PY_FILE			= $(PROPERTIES_PREFIX).py
PROPERTIES_INSTALL_PY_FILE		= $(ARCH_DIR)/$(PROPERTIES_RAW_PY_FILE)
PROPERTIES_WRAP					= $(ARCH_DIR)/$(PROPERTIES_PREFIX)_wrap
PROPERTIES_RAW_SO_FILE			= $(INTERFACE_DIRECTORY)/_$(PROPERTIES_INTERFACE_NAME).$(SO_EXT)
PROPERTIES_INSTALL_SO_FILE		= $(ARCH_DIR)/$(PROPERTIES_RAW_SO_FILE)
PROPERTIES_MOD_DOCS				= modules_pydocs/$(PROPERTIES_INTERFACE_NAME).py

# -- iterators module
ITERATORS_MAIN_INT				= modules/$(ITERATORS_INTERFACE_NAME).i
ITERATORS_MOD_DEPS				= $(ITERATORS_MAIN_INT) $(GRAPHS_MAIN_INT)			\
									$(TYPES_MAIN_INT) $(ITERATORS_DPHDRS)
ITERATORS_PREFIX				= $(INTERFACE_DIRECTORY)/$(ITERATORS_INTERFACE_NAME)
ITERATORS_RAW_PY_FILE			= $(ITERATORS_PREFIX).py
ITERATORS_INSTALL_PY_FILE		= $(ARCH_DIR)/$(ITERATORS_RAW_PY_FILE)
ITERATORS_WRAP					= $(ARCH_DIR)/$(ITERATORS_PREFIX)_wrap
ITERATORS_RAW_SO_FILE			= $(INTERFACE_DIRECTORY)/_$(ITERATORS_INTERFACE_NAME).$(SO_EXT)
ITERATORS_INSTALL_SO_FILE		= $(ARCH_DIR)/$(ITERATORS_RAW_SO_FILE)
ITERATORS_MOD_DOCS				= modules_pydocs/$(ITERATORS_INTERFACE_NAME).py

# -- utilities module
UTILS_MAIN_INT					= modules/$(UTILS_INTERFACE_NAME).i
UTILS_MOD_DEPS					= $(UTILS_MAIN_INT) $(GRAPHS_MAIN_INT) 				\
									$(TYPES_MAIN_INT) $(UTILS_DPHDRS)
UTILS_PREFIX					= $(INTERFACE_DIRECTORY)/$(UTILS_INTERFACE_NAME)
UTILS_RAW_PY_FILE				= $(UTILS_PREFIX).py
UTILS_INSTALL_PY_FILE			= $(ARCH_DIR)/$(UTILS_RAW_PY_FILE)
UTILS_WRAP						= $(ARCH_DIR)/$(UTILS_PREFIX)_wrap
UTILS_RAW_SO_FILE				= $(INTERFACE_DIRECTORY)/_$(UTILS_INTERFACE_NAME).$(SO_EXT)
UTILS_INSTALL_SO_FILE			= $(ARCH_DIR)/$(UTILS_RAW_SO_FILE)
UTILS_MOD_DOCS					= modules_pydocs/$(UTILS_INTERFACE_NAME).py

# -- io module
IO_MAIN_INT						= modules/$(IO_INTERFACE_NAME).i
IO_MOD_DEPS						= $(IO_MAIN_INT) $(GRAPHS_MAIN_INT) 				\
									$(TYPES_MAIN_INT) $(IO_DPHDRS)					\
									$(HEAD_VECTOR_ERROR_TYPE_MAIN_INT)				\
									$(TREEBANK_FEATURE_TYPE_MAIN_INT)				\
									$(TREEBANK_FEATURE_TYPE_MAIN_INT)
IO_PREFIX						= $(INTERFACE_DIRECTORY)/$(IO_INTERFACE_NAME)
IO_RAW_PY_FILE					= $(IO_PREFIX).py
IO_INSTALL_PY_FILE				= $(ARCH_DIR)/$(IO_RAW_PY_FILE)
IO_WRAP							= $(ARCH_DIR)/$(IO_PREFIX)_wrap
IO_RAW_SO_FILE					= $(INTERFACE_DIRECTORY)/_$(IO_INTERFACE_NAME).$(SO_EXT)
IO_INSTALL_SO_FILE				= $(ARCH_DIR)/$(IO_RAW_SO_FILE)
IO_MOD_DOCS						= modules_pydocs/$(IO_INTERFACE_NAME).py

# -- generate module
GENERATE_MAIN_INT				= modules/$(GENERATE_INTERFACE_NAME).i
GENERATE_MOD_DEPS				= $(GENERATE_MAIN_INT) $(GRAPHS_MAIN_INT) 			\
									$(PROPERTIES_MAIN_INT) $(TYPES_MAIN_INT) 		\
									$(GENERATE_DPHDRS)
GENERATE_PREFIX					= $(INTERFACE_DIRECTORY)/$(GENERATE_INTERFACE_NAME)
GENERATE_RAW_PY_FILE			= $(GENERATE_PREFIX).py
GENERATE_INSTALL_PY_FILE		= $(ARCH_DIR)/$(GENERATE_RAW_PY_FILE)
GENERATE_WRAP					= $(ARCH_DIR)/$(GENERATE_PREFIX)_wrap
GENERATE_RAW_SO_FILE			= $(INTERFACE_DIRECTORY)/_$(GENERATE_INTERFACE_NAME).$(SO_EXT)
GENERATE_INSTALL_SO_FILE		= $(ARCH_DIR)/$(GENERATE_RAW_SO_FILE)
GENERATE_MOD_DOCS				= modules_pydocs/$(GENERATE_INTERFACE_NAME).py

# -- linarr module
LINARR_MAIN_INT					= modules/$(LINARR_INTERFACE_NAME).i
LINARR_MOD_DEPS					= $(LINARR_MAIN_INT) $(LINARR_DPHDRS)				\
									$(SYN_DEP_TREE_TYPE_MOD_DEPS) $(ALG_C_MOD_DEPS)	\
									$(ALG_DMIN_MOD_DEPS) $(ALG_DMIN_PL_MOD_DEPS)	\
									$(ALG_DMIN_PR_MOD_DEPS) $(NUMERIC_MAIN_INT)		\
									$(PROPERTIES_MAIN_INT) $(TYPES_MOD_DEPS)
LINARR_PREFIX					= $(INTERFACE_DIRECTORY)/$(LINARR_INTERFACE_NAME)
LINARR_RAW_PY_FILE				= $(LINARR_PREFIX).py
LINARR_INSTALL_PY_FILE			= $(ARCH_DIR)/$(LINARR_RAW_PY_FILE)
LINARR_WRAP						= $(ARCH_DIR)/$(LINARR_PREFIX)_wrap
LINARR_RAW_SO_FILE				= $(INTERFACE_DIRECTORY)/_$(LINARR_INTERFACE_NAME).$(SO_EXT)
LINARR_INSTALL_SO_FILE			= $(ARCH_DIR)/$(LINARR_RAW_SO_FILE)
LINARR_MOD_DOCS					= modules_pydocs/$(LINARR_INTERFACE_NAME).py

# -------
# VERSION

# -- version module
VERSION_MAIN_INT				= modules/$(VERSION_INTERFACE_NAME).i
VERSION_MOD_DEPS				= $(VERSION_MAIN_INT) $(VERSION_DPHDRS)
VERSION_PREFIX					= $(INTERFACE_DIRECTORY)/$(VERSION_INTERFACE_NAME)
VERSION_RAW_PY_FILE				= $(VERSION_PREFIX).py
VERSION_INSTALL_PY_FILE			= $(ARCH_DIR)/$(VERSION_RAW_PY_FILE)
VERSION_WRAP					= $(ARCH_DIR)/$(VERSION_PREFIX)_wrap
VERSION_RAW_SO_FILE				= $(INTERFACE_DIRECTORY)/_$(VERSION_INTERFACE_NAME).$(SO_EXT)
VERSION_INSTALL_SO_FILE			= $(ARCH_DIR)/$(VERSION_RAW_SO_FILE)
VERSION_MOD_DOCS				= modules_pydocs/$(VERSION_INTERFACE_NAME).py

# ---------------
# LAL init module

# -- version module
LAL_MAIN_INT					= modules/$(LAL_INTERFACE_NAME).i
LAL_MOD_DEPS					= $(LAL_MAIN_INT) $(LAL_DPHDRS)
LAL_PREFIX						= $(INTERFACE_DIRECTORY)/$(LAL_INTERFACE_NAME)
LAL_RAW_PY_FILE					= $(LAL_PREFIX).py
LAL_INSTALL_PY_FILE				= $(ARCH_DIR)/$(LAL_RAW_PY_FILE)
LAL_WRAP						= $(ARCH_DIR)/$(LAL_PREFIX)_wrap
LAL_RAW_SO_FILE					= $(INTERFACE_DIRECTORY)/_$(LAL_INTERFACE_NAME).$(SO_EXT)
LAL_INSTALL_SO_FILE				= $(ARCH_DIR)/$(LAL_RAW_SO_FILE)
LAL_MOD_DOCS					= modules_pydocs/$(LAL_INTERFACE_NAME).py

########################################################################
# LISTS

##############
# ALL SO FILES

ALL_INSTALL_SO_FILES =								\
	$(HEAD_VECTOR_ERROR_TYPE_INSTALL_SO_FILE)		\
	$(TREEBANK_FILE_ERROR_TYPE_INSTALL_SO_FILE)		\
	$(TREEBANK_FEATURE_TYPE_INSTALL_SO_FILE)		\
	$(SYN_DEP_TREE_TYPE_INSTALL_SO_FILE) 			\
	$(TREE_TYPE_INSTALL_SO_FILE) 					\
	$(ALG_C_INSTALL_SO_FILE) 						\
	$(ALG_CHUNKING_INSTALL_SO_FILE) 				\
	$(ALG_DMIN_INSTALL_SO_FILE)						\
	$(ALG_DMIN_PL_INSTALL_SO_FILE)					\
	$(ALG_DMIN_PR_INSTALL_SO_FILE)					\
	$(TYPES_INSTALL_SO_FILE)						\
	$(GENERATE_INSTALL_SO_FILE) 					\
	$(GRAPHS_INSTALL_SO_FILE) 						\
	$(IO_INSTALL_SO_FILE)							\
	$(ITERATORS_INSTALL_SO_FILE)					\
	$(LINARR_INSTALL_SO_FILE)						\
	$(NUMERIC_INSTALL_SO_FILE)						\
	$(PROPERTIES_INSTALL_SO_FILE)					\
	$(UTILS_INSTALL_SO_FILE)						\
	$(VERSION_INSTALL_SO_FILE)

##################
# ALL PYTHON FILES

ALL_INSTALL_PY_FILES =								\
	$(HEAD_VECTOR_ERROR_TYPE_INSTALL_PY_FILE)		\
	$(TREEBANK_FILE_ERROR_TYPE_INSTALL_PY_FILE)		\
	$(TREEBANK_FEATURE_TYPE_INSTALL_PY_FILE)		\
	$(SYN_DEP_TREE_TYPE_INSTALL_PY_FILE) 			\
	$(TREE_TYPE_INSTALL_PY_FILE) 					\
	$(ALG_C_INSTALL_PY_FILE) 						\
	$(ALG_CHUNKING_INSTALL_PY_FILE) 				\
	$(ALG_DMIN_INSTALL_PY_FILE)						\
	$(ALG_DMIN_PL_INSTALL_PY_FILE)					\
	$(ALG_DMIN_PR_INSTALL_PY_FILE)					\
	$(TYPES_INSTALL_PY_FILE)						\
	$(GENERATE_INSTALL_PY_FILE) 					\
	$(GRAPHS_INSTALL_PY_FILE) 						\
	$(IO_INSTALL_PY_FILE)							\
	$(ITERATORS_INSTALL_PY_FILE)					\
	$(LINARR_INSTALL_PY_FILE)						\
	$(NUMERIC_INSTALL_PY_FILE)						\
	$(PROPERTIES_INSTALL_PY_FILE)					\
	$(UTILS_INSTALL_PY_FILE)						\
	$(VERSION_INSTALL_PY_FILE)						\
	$(ARCH_DIR)/$(INTERFACE_DIRECTORY)/__init__.py

################
# ALL WRAP FILES

ALL_WRAP_FILES =							\
	$(HEAD_VECTOR_ERROR_TYPE_WRAP).cxx		\
	$(TREEBANK_FILE_ERROR_TYPE_WRAP).cxx	\
	$(TREEBANK_FEATURE_TYPE_WRAP).cxx		\
	$(SYN_DEP_TREE_TYPE_WRAP).cxx			\
	$(TREE_TYPE_WRAP).cxx 					\
	$(ALG_C_WRAP).cxx 						\
	$(ALG_CHUNKING_WRAP).cxx 				\
	$(ALG_DMIN_WRAP).cxx					\
	$(ALG_DMIN_PL_WRAP).cxx					\
	$(ALG_DMIN_PR_WRAP).cxx					\
	$(TYPES_WRAP).cxx						\
	$(GENERATE_WRAP).cxx 					\
	$(GRAPHS_WRAP).cxx 						\
	$(IO_WRAP).cxx							\
	$(ITERATORS_WRAP).cxx					\
	$(LINARR_WRAP).cxx						\
	$(NUMERIC_WRAP).cxx						\
	$(PROPERTIES_WRAP).cxx					\
	$(UTILS_WRAP).cxx						\
	$(VERSION_WRAP).cxx

############################
# ALL WRAP OBJECT (.o) FILES

ALL_WRAP_O_FILES =						\
	$(HEAD_VECTOR_ERROR_TYPE_WRAP).o	\
	$(TREEBANK_FILE_ERROR_TYPE_WRAP).o	\
	$(TREEBANK_FEATURE_TYPE_WRAP).o		\
	$(SYN_DEP_TREE_TYPE_WRAP).o 		\
	$(TREE_TYPE_WRAP).o 				\
	$(ALG_C_WRAP).o 					\
	$(ALG_CHUNKING_WRAP).o 				\
	$(ALG_DMIN_WRAP).o					\
	$(ALG_DMIN_PL_WRAP).o				\
	$(ALG_DMIN_PR_WRAP).o				\
	$(TYPES_WRAP).o						\
	$(GENERATE_WRAP).o 					\
	$(GRAPHS_WRAP).o 					\
	$(IO_WRAP).o						\
	$(ITERATORS_WRAP).o					\
	$(LINARR_WRAP).o					\
	$(NUMERIC_WRAP).o					\
	$(PROPERTIES_WRAP).o				\
	$(UTILS_WRAP).o						\
	$(VERSION_WRAP).o
